library(tidyverse)
library(dplyr)
library(dbplyr)
library(xgboost)
library(caret)
library(tibble)
library(ggplot2)
library(pROC)
library(earth)
# Files
trainFile <- "./data/census_income_learn.csv"
testFile <- './data/census_income_test.csv'
# Metadata
modelId <- 1
dataId <- 1
# Load Files
trainDataRaw <- read.csv(file = trainFile) %>% as.tibble %>% sample_n(500)
testDataRaw <- read.csv(file = testFile) %>% as.tibble
# Clean data
customPreprocess1 <- function(trainDataRaw) {
numData <- trainDataRaw %>%
mutate(over50k = as.numeric(X..50000.)-1) %>%
select(-'X..50000.') %>%
select_if(is.numeric) %>%
mutate(class = if_else(as.numeric(over50k)==1, 'over50', 'below50') %>% factor) %>%
select(-over50k) %>%
as.tibble
strData <- trainDataRaw %>%
select_if(~!is.numeric(.x)) %>%
# mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
gather(Not.in.universe, value)
spread(key = 'type', value = ) %>%
as.tibble
}
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataClean <- predict(dummies, newdata = trainDataClean)
}
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataClean <- predict(dummies, newdata = trainDataClean)
trainDataClean
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataClean <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
View(trainDataClean)
trainDataClean$class
dummies <- dummyVars(class ~ ., data = trainDataClean, x = class)
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
View(trainDataDummies)
trainDataDummies$class = trainDataClean$class
View(trainDataDummies)
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
trainDataClean <- trainDataRaw %>% customPreprocess2
testDataClean <- testDataRaw %>% customPreprocess2
# Train model
xy <- trainDataClean %>%
na.omit %>%
select(-over50k) %>%
sample_n(10000)
# Train model
xy <- trainDataClean %>%
sample_n(10000)
# Load Files
trainDataRaw <- read.csv(file = trainFile) %>% as.tibble %>% sample_n(20000)
# Clean data
customPreprocess1 <- function(trainDataRaw) {
numData <- trainDataRaw %>%
mutate(over50k = as.numeric(X..50000.)-1) %>%
select(-'X..50000.') %>%
select_if(is.numeric) %>%
mutate(class = if_else(as.numeric(over50k)==1, 'over50', 'below50') %>% factor) %>%
select(-over50k) %>%
as.tibble
strData <- trainDataRaw %>%
select_if(~!is.numeric(.x)) %>%
# mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
gather(Not.in.universe, value)
spread(key = 'type', value = ) %>%
as.tibble
}
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
trainDataClean <- trainDataRaw %>% customPreprocess2
# Train model
xy <- trainDataClean %>%
sample_n(10000)
xy$class %>% summary
xy %>% dim
fitControl <- trainControl(
method = "repeatedcv",
number = 5,
repeats = 1,
summaryFunction = twoClassSummary,
classProbs = TRUE,
verboseIter = TRUE)
fit <- train(
x = xy %>% select(-class) %>% as.matrix,
y = xy$class,
tuneLength = 1,
method = 'xgbTree',
trControl = fitControl,
metric = 'ROC',
verbose = TRUE
)
xy
View(xy)
xy$class %>% summary
# Load Files
trainDataRaw <- read.csv(file = trainFile) %>% as.tibble #%>% sample_n(20000)
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
trainDataClean <- trainDataRaw %>% customPreprocess2
# Train model
xy <- trainDataClean %>%
group_by(class) %>%
sample_frac(0.2)
xy$class %>% summary
# Train model
trainDataClean$calss
# Train model
trainDataClean$class
View(trainDataRaw)
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)=='50000+.', 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
# Train model
trainDataClean$class
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)==2, 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
# Train model
trainDataClean$class
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)==2, 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
trainDataClean <- trainDataRaw %>% customPreprocess2
testDataClean <- testDataRaw %>% customPreprocess2
# Train model
trainDataClean$class
xy <- trainDataClean %>%
group_by(class) %>%
sample_frac(0.2)
xy$class %>% summary
xy %>% dim
fitControl <- trainControl(
method = "repeatedcv",
number = 5,
repeats = 1,
summaryFunction = twoClassSummary,
classProbs = TRUE,
verboseIter = TRUE)
fit <- train(
x = xy %>% select(-class) %>% as.matrix,
y = xy$class,
tuneLength = 1,
method = 'xgbTree',
trControl = fitControl,
metric = 'ROC',
verbose = TRUE
)
xy <- trainDataClean %>%
group_by(class) %>%
sample_frac(0.2) %>%
ungroup
xy$class %>% summary
xy %>% dim
fitControl <- trainControl(
method = "repeatedcv",
number = 5,
repeats = 1,
summaryFunction = twoClassSummary,
classProbs = TRUE,
verboseIter = TRUE)
fit <- train(
x = xy %>% select(-class) %>% as.matrix,
y = xy$class,
tuneLength = 1,
method = 'xgbTree',
trControl = fitControl,
metric = 'ROC',
verbose = TRUE
)
fit$train
fit$results %>% arrange(-ROC) %>% head
varImp(fit, scale = TRUE)
fit$modelId <- modelId
fit$dataId <- dataId
# fit$data <- xy
fit$predict <- predict(fit, newdata = xy %>% select(-class) %>% as.matrix, type = 'prob')
pROC_obj <- roc(xy$class, fit$predict$below50, ci = TRUE)
pROC_obj
plot(pROC_obj)
saveRDS(fit, file = model1.RData)
saveRDS(fit, file = 'model1.RData')
# fit$data <- xy
fit$predict <- predict(fit, newdata = testDataClean %>% select(-class) %>% as.matrix, type = 'prob')
testDataClean <- testDataRaw %>% customPreprocess2
# fit$data <- xy
fit$predict <- predict(fit, newdata = testDataClean %>% select(-class) %>% as.matrix, type = 'prob')
# fit$data <- xy
fit$predict <- predict(fit, newdata = trainDataClean %>% select(-class) %>% as.matrix, type = 'prob')
pROC_obj <- roc(xy$class, fit$predict$below50, ci = TRUE)
pROC_obj
plot(pROC_obj)
testDataClean <- testDataRaw %>% customPreprocess2
trainDataClean <- trainDataRaw %>% customPreprocess2
testDataRaw <- read.csv(file = testFile) %>% as.tibble
# Clean data
## Keep only numerics
customPreprocess1 <- function(trainDataRaw) {
numData <- trainDataRaw %>%
mutate(over50k = as.numeric(X..50000.)-1) %>%
select(-'X..50000.') %>%
select_if(is.numeric) %>%
mutate(class = if_else(as.numeric(over50k)==1, 'over50', 'below50') %>% factor) %>%
select(-over50k) %>%
as.tibble
}
## Convert all non numeric into dummy variables and keep numerics unchanged
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(X..50000.)==2, 'over50', 'below50') %>% factor) %>%
select(-X..50000.) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
trainDataClean <- trainDataRaw %>% customPreprocess2
testDataClean <- testDataRaw %>% customPreprocess2
View(testDataClean)
allData = trainDataRaw %>%
mutate(train = 1) %>%
full_join(testDataRaw %>% mutate(train = 0))
allData = trainDataRaw %>%
mutate(train = 1) %>%
rbind(testDataRaw %>% mutate(train = 0))
allData = bind_rows(
trainDataRaw %>% mutate(train = 1),
testDataRaw %>% mutate(train = 0))
View(trainDataRaw)
View(allData)
# Load Files
trainDataRaw <- read.csv(file = trainFile) %>% as.tibble
testDataRaw <- read.csv(file = testFile) %>% as.tibble
colnames(trainDataRaw) == colnames(testDataRaw)
View(trainDataRaw)
View(testDataRaw)
# Load Files
trainDataRaw <- read.csv(file = trainFile, header = FALSE) %>% as.tibble
View(trainDataRaw)
# Load Files
trainDataRaw <- read.csv(file = trainFile, header = FALSE) %>% as.tibble
testDataRaw <- read.csv(file = testFile, header = FALSE) %>% as.tibble
colnames(trainDataRaw) == colnames(testDataRaw)
# Load Files
trainDataRaw <- read.csv(file = trainFile, header = FALSE) %>% as.tibble
testDataRaw <- read.csv(file = testFile, header = FALSE) %>% as.tibble
# Clean data
## Convert all non numeric into dummy variables and keep numerics unchanged
customPreprocess2 <- function(trainDataRaw) {
trainDataClean <- trainDataRaw %>%
mutate(class = if_else(as.numeric(V42)==2, 'over50', 'below50') %>% factor) %>%
select(-V42) %>%
as.tibble
dummies <- dummyVars(class ~ ., data = trainDataClean)
trainDataDummies <- predict(dummies, newdata = trainDataClean) %>%
as.tibble
trainDataDummies$class = trainDataClean$class %>% factor
trainDataDummies
}
allData = bind_rows(
trainDataRaw %>% mutate(train = 1),
testDataRaw %>% mutate(train = 0))
View(allData)
trainDataRaw %>% mutate(train = 1),
testDataRaw %>% mutate(train = 0)) %>%
customPreprocess2
allData = bind_rows(
trainDataRaw %>% mutate(train = 1),
testDataRaw %>% mutate(train = 0)) %>%
customPreprocess2
View(allData)
